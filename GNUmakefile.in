# makefile for libcif++

.PHONY: firstTarget
firstTarget: all

CXX					= @CXX@
CXXFLAGS			= @CXXFLAGS@ @BOOST_CPPFLAGS@
LDFLAGS				= @LDFLAGS@ @LIBS@ @BOOST_LDFLAGS@
LIBS				= @LIBS@

prefix				= @prefix@
exec_prefix			= @exec_prefix@
libdir				= @libdir@
includedir			= @includedir@
pkgconfigdir		= $(libdir)/pkgconfig

LIB_NAME			= @PACKAGE_NAME@
LIB_TARGET			= $(LIB_NAME).la

LIBTOOL_DEPS = @LIBTOOL_DEPS@
libtool: $(LIBTOOL_DEPS)
	$(SHELL) ./config.status --recheck

# libtool stuff

LIBTOOL = $(SHELL) ./libtool
CXXCOMPILE = $(LIBTOOL) --silent --tag=CXX --mode=compile $(CXX) $(CXXFLAGS)
CXXLINK = $(LIBTOOL) --silent --tag=CXX --mode=link $(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@

# main build variables
CXXFLAGS            += -I. -pthread -I include/mailio/ -I include/
CXXFLAGS            += -Wall -Wno-multichar

# Use the DEBUG flag to build debug versions of the code
DEBUG               = @DEBUG@

ifeq "$(DEBUG)" "1"
DEFINES				+= DEBUG
CXXFLAGS            += -g -O0
LDFLAGS				+= -g
else
CXXFLAGS			+= -O3
DEFINES				+= NDEBUG
endif

# targets

VPATH += src:test

CXXFLAGS			+= $(DEFINES:%=-D%)

OBJDIR = obj
ifeq "$(DEBUG)" "1"
	OBJDIR	:= $(OBJDIR).dbg
endif

$(OBJDIR):
	mkdir -p $(OBJDIR)

LIB_SRC		= \
	base64.cpp \
	bit7.cpp \
	codec.cpp \
	imap.cpp \
	message.cpp \
	pop3.cpp \
	quoted_printable.cpp \
	binary.cpp \
	bit8.cpp \
	dialog.cpp \
	mailboxes.cpp \
	mime.cpp \
	q_codec.cpp \
	smtp.cpp \

HEADERS = \
	mailio/base64.hpp \
	mailio/binary.hpp \
	mailio/bit7.hpp \
	mailio/bit8.hpp \
	mailio/codec.hpp \
	mailio/dialog.hpp \
	mailio/imap.hpp \
	mailio/mailboxes.hpp \
	mailio/message.hpp \
	mailio/mime.hpp \
	mailio/pop3.hpp \
	mailio/q_codec.hpp \
	mailio/quoted_printable.hpp \
	mailio/smtp.hpp \
	mailio/export.hpp

SOURCES			= $(addprefix src/,$(LIB_SRC))
OBJECTS			= $(addprefix $(OBJDIR)/, $(notdir $(SOURCES:%.cpp=%.lo)))

$(LIB_TARGET): $(OBJECTS)
	$(CXXLINK) -rpath $(libdir) $(OBJECTS) $(LIBS)

libs: $(LIB_TARGET)
.PHONY: libs

all: libs
.PHONY: all

-include $(OBJECTS:%.lo=%.d)

$(OBJECTS:.lo=.d):

$(OBJDIR)/%.lo: %.cpp | $(OBJDIR)
	@ echo ">>" $<
	@ $(CXXCOMPILE) -MT $@ -MD -MP -MF $(OBJDIR)/$*.d -c -o $@ $<

$(OBJDIR)/%.o: %.cpp | $(OBJDIR)
	@ echo ">>" $<
	@ $(CXX) $(CXXFLAGS) -MT $@ -MD -MP -MF $(OBJDIR)/$*.d -c -o $@ $<

.PHONY: install
install: $(LIB_TARGET)
	$(LIBTOOL) --mode=install install $(LIB_TARGET) $(libdir)
	install -d $(includedir)/mailio
	for f in $(HEADERS); do install include/$$f $(includedir)/$$f; done
	install -d $(pkgconfigdir)
	install $(LIB_NAME:lib%=%).pc $(pkgconfigdir)/

.PHONY: clean
clean:
	rm -rf .libs $(OBJDIR)/* $(LIB_TARGET)

.PHONY: distclean
distclean: clean
	rm -f libtool config.lt
	rm -f config.status config.cache config.log configure.lineno config.status.lineno
	rm -f GNUmakefile

# Test rules

dist-clean: clean

FORCE:
